plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Lab 1 '

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Generate metadata for @ConfigurationProperties (optional but nice)
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Spring Data JPA + Web
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // MySQL driver
    runtimeOnly 'com.mysql:mysql-connector-j'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // BCrypt (nếu bạn dùng ngoài Spring Security)
    implementation 'org.mindrot:jbcrypt:0.4'

    // --- Test ---
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // DB in-memory cho test (tùy chọn)
    testRuntimeOnly 'com.h2database:h2'

    // Agent để tránh cảnh báo self-attach (future-proof)
    testRuntimeOnly 'net.bytebuddy:byte-buddy-agent:1.17.7'
}

tasks.named('test') {
    useJUnitPlatform()

    doFirst {
        def agent = configurations.testRuntimeClasspath
                .filter { it.name.contains('byte-buddy-agent') }
                .singleFile
        jvmArgs "-javaagent:${agent.absolutePath}"
    }
}
